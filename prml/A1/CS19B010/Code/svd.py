# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1grpDNgUFXcit3x8WuQtzMIimynv4-5Yw
"""

#In svd we have A=UsigmaVT.......................................................................................................
import matplotlib.pyplot as plt
import matplotlib.image as mpimg
import numpy as np
from numpy import linalg as LA
from PIL import Image
import sys

# .....................
A=mpimg.imread('88.jpg')

A = A.astype(np.uint32)
ATA=np.dot(A.T,A)

ev,V=np.linalg.eig(ATA)

U=A@V#we have AV=Usigma just inititalsing U with this and modifiying it to its coorect value in the next step

for i in range (256):
  U[:,i]=(U[:,i])/(np.linalg.norm(U[:,i]))
#sigma=UTAV
x2=np.array([])
y2=np.array([])

sig=U.T@A@V

for k in range(256):
  newsig=sig.copy()
  for i in range(256):
      if i>=k: #for all the elements that are higher than k making their values 0
        newsig[i,i]=0
      
      
  newa=U@newsig@V.T
  
  cc=np.subtract(A,newa)
  dif=LA.norm(cc,'fro')#frobenius norm for a given k

  y2=np.append(y2,dif)
  x2=np.append(x2,k)
  
plt.plot(x2,y2)
plt.ylabel("frobenius norm")
plt.xlabel("K values")
plt.show()


